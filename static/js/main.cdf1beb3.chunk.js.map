{"version":3,"sources":["components/Navigation.js","components/generalComponents/Cards.js","services/fetch.js","contexts/PokemonTeamContext.js","contexts/EnemyPokemonTeam.js","components/pokemon.js","components/Battle.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","Navbar","bg","variant","expand","Container","className","Brand","src","height","alt","Toggle","Collapse","id","Nav","to","PokemonCard","props","pokemon","useState","open","setOpen","gender","GetGender","Card","Img","image","Body","Title","name","icon","types","map","t","i","type","ListGroup","moves","m","description","length","OverlayTrigger","overlay","Tooltip","flavor_text","placement","defaultShow","delay","ListGroupItem","Text","ability","Object","entries","stats","s","ListItemStat","value","Button","onClick","base_stat","getImage","data","sprites","other","front_default","getFourMoves","a","result","move","Math","round","random","getMoveInfo","url","moveStat","push","currentPP","pp","getAbility","abilities","getAbilityInfo","generatePokemonTeam","getTotalPokemonCount","totalPokemon","team","fetchOnePokemon","fetchedPokemon","fetch","response","json","console","log","String","currentHeath","health","attack","defense","speed","statusEffect","species","getGender","results","count","accuracy","damage_class","flavor_text_entries","filter","text","effect_chance","effect_entries","effect","power","target","then","PokemonTeamContext","createContext","PokemonTeamProvider","JSON","parse","localStorage","getItem","pokemonTeam","setPokemonTeam","tries","setTries","generateTeam","useCallback","setItem","stringify","api","useMemo","Provider","children","usePokemonTeamContext","useContext","EnemyPokemonTeamContext","EnemyPokemonTeamProvider","enemyPokemonTeam","setEnemyPokemonTeam","generateEnemyTeam","useEnemyPokemonTeamContext","PokemonSection","fluid","style","borderRadius","PokemonButton","PokemonCards","message","setMessage","showToast","setShowToast","Spinner","animation","size","ToastContainer","position","zIndex","Toast","onClose","show","autohide","Header","Row","xl","p","Col","BattleSection","activePokemon","setActivePokemon","activeEnemyPokemon","pokeMenu","setPokeMenu","PokemonChangeMenu","lg","NameSection","friend","PokeOptions","PokeBattleButton","PokeChangeFrames","changePokemon","PokeStatus","status","ProgressBar","now","min","max","getEffectColour","Badge","pill","RoundedDiv","color","PokeMessage","PokeStartButton","buttons","col","PokeMoveButton","history","useHistory","button","setTimeout","click","DefaultComp","ProvidedApp","path","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cdf1beb3.chunk.js","sourcesContent":["import {Container, Nav, Navbar} from \"react-bootstrap\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport function Navigation() {\r\n    return <>\r\n        <Navbar bg={'dark'} variant={'dark'} expand={'lg'}>\r\n            <Container className={'d-flex justify-content-center'}>\r\n                <Navbar.Brand>\r\n                    <img className=\"d-inline-block align-top\"\r\n                         src='https://firebasestorage.googleapis.com/v0/b/pokemon-battle-f40d2.appspot.com/o/pokemon_logo.png?alt=media&token=911b4fce-0aac-4ee4-8e8e-308472d9997a'\r\n                         height=\"40\"\r\n                         alt=\"\"/>\r\n                    <span className={'text-light ms-5 h2'}>Pokemon battle</span>\r\n                </Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"me-auto\">\r\n                        <Link to={'/'} className={'nav-link'}>Home</Link>\r\n                        <Link to={'/battle'} className={'nav-link'}>Battle</Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    </>\r\n\r\n}","import {Button, Card, ListGroup, ListGroupItem, OverlayTrigger, Tooltip} from \"react-bootstrap\";\r\nimport {useState} from \"react\";\r\nimport {MDBIcon} from \"mdbreact\";\r\n\r\nexport function PokemonCard (props) {\r\n    const {pokemon} = props\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const gender = GetGender(pokemon.gender)\r\n\r\n    return <>\r\n        <Card>\r\n            <Card.Img variant={'top'}\r\n                      src={pokemon.image}/>\r\n            <Card.Body>\r\n                <Card.Title>\r\n                    <h2 className={'text-capitalize'}>{pokemon.name} <MDBIcon icon={gender}/></h2>\r\n                    {pokemon.types.map((t, i)=> <small className={'text-muted'} key={i}>{t.type.name} </small>)}\r\n                </Card.Title>\r\n                {open &&\r\n                    <div>\r\n                        <h5>Moves : </h5>\r\n                        <ListGroup className={'list-group-flush'}>\r\n                            {pokemon.moves.map((m, i)=>{\r\n                                return <>{m.description.length > 0 && <OverlayTrigger key={i} overlay={\r\n                                        <Tooltip>\r\n                                            {m.description[0].flavor_text}\r\n                                        </Tooltip>\r\n                                    } placement={'top'} defaultShow={false} delay={500}>\r\n                                        <ListGroupItem className={'text-capitalize'}>{m.name}</ListGroupItem>\r\n                                    </OverlayTrigger>}</>\r\n                            })}\r\n                        </ListGroup>\r\n                        <Card.Text>\r\n                            {pokemon.ability && <OverlayTrigger overlay={\r\n                                <Tooltip>\r\n                                    {pokemon.ability.description[0].flavor_text}\r\n                                </Tooltip>\r\n                            } placement={'top'} defaultShow={false} delay={500}>\r\n                                <span><span className={'h5'}>Ability</span> : {pokemon.ability.name}</span>\r\n                            </OverlayTrigger>\r\n                                }\r\n                        </Card.Text>\r\n                        <h5>Stats :</h5>\r\n                        <ListGroup className={'list-group-flush'}>\r\n                            {Object.entries(pokemon.stats).map((s, i)=>{\r\n                                return <ListItemStat name={s[0]} value={s[1]} key={i}/>\r\n                            })}\r\n                        </ListGroup>\r\n                    </div>\r\n                }\r\n                <Button className={'my-2 w-100'} onClick={()=>setOpen(!open)}>{open ? 'Hide extra info' : 'Show extra info'}</Button>\r\n            </Card.Body>\r\n        </Card>\r\n    </>\r\n}\r\n\r\nfunction ListItemStat(props){\r\n    const {name, value} = props;\r\n    return <ListGroupItem className={'text-capitalize'}>{`${name} : ${value.base_stat}`}</ListGroupItem>\r\n}\r\n\r\nexport const GetGender = (gender) => {\r\n    switch (gender) {\r\n        case 'genderless':\r\n            return 'genderless'\r\n        case 'male' :\r\n            return 'mars'\r\n        case 'female' :\r\n            return 'venus'\r\n        default :\r\n            return \"genderless\"\r\n    }\r\n}","function getImage(data) {\r\n    return data.sprites.other[\"official-artwork\"].front_default\r\n}\r\n\r\nasync function getFourMoves(moves) {\r\n    if (moves.length < 1) return []\r\n    if (moves.length <= 4) return moves\r\n    let result = []\r\n    for (let i = 0; i < 4; i++) {\r\n        const move = moves[Math.round(Math.random() * (moves.length - 1))].move\r\n        const moveStat = await getMoveInfo(move.url)\r\n        result.push({...moveStat, name: move.name, currentPP: moveStat.pp})\r\n    }\r\n    return result\r\n}\r\n\r\nasync function getAbility(abilities) {\r\n    const ability = abilities[Math.round(Math.random() * (abilities.length -1))]\r\n    return await getAbilityInfo(ability.ability.url)\r\n}\r\n\r\nexport async function generatePokemonTeam() {\r\n    const totalPokemon = await getTotalPokemonCount()\r\n    const team = []\r\n    for (let i = 0; i < 6; i++) {\r\n        const fetchedPokemon = await fetchOnePokemon(Math.round((Math.random() * (totalPokemon-1))+1))\r\n        team.push(fetchedPokemon)\r\n    }\r\n    return team\r\n}\r\n\r\nexport async function fetchOnePokemon(id) {\r\n    const response = await fetch(`https://pokeapi.co/api/v2/pokemon/${id}`);\r\n    const data = await response.json();\r\n    if (data.moves.length < 1) await fetchOnePokemon(id)\r\n    console.log(data)\r\n    return {\r\n        id: String(data.id),\r\n        name: data.name,\r\n        image: getImage(data),\r\n        ability: await getAbility(data.abilities),\r\n        moves: await getFourMoves(data.moves),\r\n        stats: {\r\n            currentHeath: data.stats[0],\r\n            health: data.stats[0],\r\n            attack: data.stats[1],\r\n            defense: data.stats[2],\r\n            'special attack': data.stats[3],\r\n            'special defense': data.stats[4],\r\n            speed: data.stats[5],\r\n            statusEffect: ['test']\r\n        },\r\n        types: data.types,\r\n        species: data.species.url,\r\n        gender: await getGender(data.name)\r\n    };\r\n}\r\n\r\nasync function getGender(name) {\r\n    const response = await  fetch(`https://pokeapi.co/api/v2/gender/?name=${name}`)\r\n    const data = await response.json()\r\n    return data.results[Math.round(Math.random() * (data.results.length-1))].name\r\n}\r\n\r\nexport async function getTotalPokemonCount() {\r\n    const response = await fetch('https://pokeapi.co/api/v2/pokemon-species/?limit=0')\r\n    const data = await response.json()\r\n    return data.count\r\n}\r\n\r\nexport async function getMoveInfo(url){\r\n    const response = await fetch(url)\r\n    const data = await response.json()\r\n    return {\r\n        accuracy: data.accuracy,\r\n        'damage class': data.damage_class,\r\n        description: data.flavor_text_entries.filter(text=> text['language']['name']==='en'),\r\n        pp: data.pp,\r\n        'effect chance': data.effect_chance,\r\n        'effect description': data.effect_entries[0].effect,\r\n        power: data.power,\r\n        target: data.target\r\n    }\r\n}\r\n\r\nexport async function getAbilityInfo(url){\r\n    const response = await fetch(url)\r\n    const data = await response.json().then()\r\n    return {\r\n        name: data.name,\r\n        id: data.id,\r\n        description: data.flavor_text_entries.filter(text=> text['language']['name']==='en')\r\n    }\r\n}","import {createContext, useCallback, useContext, useMemo, useState} from \"react\";\r\nimport {generatePokemonTeam} from \"../services/fetch\";\r\n\r\nconst PokemonTeamContext = createContext()\r\n\r\nexport function PokemonTeamProvider (props) {\r\n    const [pokemonTeam, setPokemonTeam] = useState(JSON.parse(localStorage.getItem('pokemonTeam')) || [])\r\n    const [tries, setTries] = useState(localStorage.getItem('tries') || 3)\r\n\r\n    const generateTeam = useCallback(async ()=>{\r\n        const team = await generatePokemonTeam()\r\n        console.log(team)\r\n        localStorage.setItem('pokemonTeam', JSON.stringify(team))\r\n        setTries(tries-1)\r\n        localStorage.setItem('tries', tries)\r\n        setPokemonTeam(team)\r\n    }, [setPokemonTeam, tries, setTries])\r\n\r\n    const api = useMemo(()=>({\r\n        pokemonTeam,\r\n        generateTeam,\r\n        tries\r\n    }),[pokemonTeam, generateTeam, tries])\r\n\r\n    return <PokemonTeamContext.Provider value={api}>\r\n        {props.children}\r\n    </PokemonTeamContext.Provider>\r\n}\r\n\r\nexport const usePokemonTeamContext = () =>useContext(PokemonTeamContext)","import {createContext, useCallback, useContext, useMemo, useState} from \"react\";\r\nimport {generatePokemonTeam} from \"../services/fetch\";\r\n\r\nconst EnemyPokemonTeamContext = createContext()\r\n\r\nexport function EnemyPokemonTeamProvider (props) {\r\n    const [enemyPokemonTeam, setEnemyPokemonTeam] = useState(JSON.parse(localStorage.getItem('enemyPokemonTeam')) || [])\r\n\r\n    const generateEnemyTeam = useCallback(async ()=>{\r\n        const team = await generatePokemonTeam()\r\n        console.log(team)\r\n        localStorage.setItem('enemyPokemonTeam', JSON.stringify(team))\r\n        setEnemyPokemonTeam(team)\r\n    }, [setEnemyPokemonTeam])\r\n\r\n    const api = useMemo(()=>({\r\n        enemyPokemonTeam,\r\n        generateEnemyTeam\r\n    }),[enemyPokemonTeam, generateEnemyTeam])\r\n\r\n    return <EnemyPokemonTeamContext.Provider value={api}>\r\n        {props.children}\r\n    </EnemyPokemonTeamContext.Provider>\r\n}\r\n\r\nexport const useEnemyPokemonTeamContext = () =>useContext(EnemyPokemonTeamContext)","import {Button, Col, Container, Row, Spinner, Toast, ToastContainer} from \"react-bootstrap\";\r\nimport {PokemonCard} from \"./generalComponents/Cards\";\r\nimport {usePokemonTeamContext} from \"../contexts/PokemonTeamContext\";\r\nimport {useState} from \"react\";\r\nimport {useEnemyPokemonTeamContext} from \"../contexts/EnemyPokemonTeam\";\r\n\r\nexport function PokemonSection() {\r\n    return <Container fluid className={'px-5 mt-3'}>\r\n        <fieldset className={'border border-3 px-4 py-2'} style={{borderRadius: '25px'}}>\r\n            <div className={'d-flex justify-content-around'}>\r\n                <h1>My Team</h1>\r\n                <PokemonButton/>\r\n            </div>\r\n            <PokemonCards/>\r\n        </fieldset>\r\n    </Container>\r\n}\r\n\r\nfunction PokemonButton () {\r\n    const {generateTeam, tries} = usePokemonTeamContext()\r\n    const {generateEnemyTeam} = useEnemyPokemonTeamContext()\r\n    const [message, setMessage] = useState('Generate your team')\r\n    const [showToast, setShowToast] = useState(false)\r\n\r\n    const clickButton = () => {\r\n        setMessage('Generating...')\r\n        generateEnemyTeam()\r\n        generateTeam().then(()=>{\r\n            setMessage('Generate your team')\r\n            setShowToast(true)\r\n        })\r\n    }\r\n\r\n    return <div className={'text-center'}>\r\n        {tries >= 0 && <Button className={'m-2'} onClick={()=>clickButton()}>{message === 'Generating...' ? <Spinner animation=\"border\" size={'sm'}/> : ''}{message}</Button>}\r\n        {showToast &&\r\n            <ToastContainer position={'top-center'} className={'mt-5'} style={{zIndex: '10000'}}>\r\n                <Toast onClose={() => setShowToast(false)} show={showToast} delay={5000} autohide animation={true}>\r\n                    <Toast.Header>\r\n                        <strong className=\"me-auto\">Successfully generated a new team</strong>\r\n                    </Toast.Header>\r\n                    <Toast.Body>{`${tries +1} generation attempt(s) remaining`}</Toast.Body>\r\n                </Toast>\r\n            </ToastContainer>\r\n        }\r\n    </div>\r\n}\r\n\r\nfunction PokemonCards () {\r\n    const {pokemonTeam} = usePokemonTeamContext()\r\n    return <Row xl={6}>\r\n        {pokemonTeam.map((p, i)=>{\r\n            return <Col key={i}>\r\n                <PokemonCard pokemon={p}/>\r\n            </Col>\r\n        })}\r\n    </Row>\r\n}","import {\r\n    Badge,\r\n    Card,\r\n    Col,\r\n    Container,\r\n    OverlayTrigger,\r\n    ProgressBar,\r\n    Row,\r\n    Tooltip\r\n} from \"react-bootstrap\";\r\nimport {usePokemonTeamContext} from \"../contexts/PokemonTeamContext\";\r\nimport {useState} from \"react\";\r\nimport {GetGender} from \"./generalComponents/Cards\";\r\nimport {MDBIcon} from \"mdbreact\";\r\nimport {useEnemyPokemonTeamContext} from \"../contexts/EnemyPokemonTeam\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nexport function BattleSection(){\r\n    const {pokemonTeam} = usePokemonTeamContext()\r\n    const {enemyPokemonTeam} = useEnemyPokemonTeamContext()\r\n    const [activePokemon, setActivePokemon] = useState(pokemonTeam[0])\r\n    const [activeEnemyPokemon, setActiveEnemyPokemon] = useState(enemyPokemonTeam[0])\r\n    const [pokeMenu, setPokeMenu] = useState('start')\r\n\r\n    return <section>\r\n        <Container id={'battle'} className={'p-0 mt-5'}>\r\n            {pokeMenu === 'pokemon' ? <PokemonChangeMenu pokemonTeam={pokemonTeam}\r\n                                                         activePokemon={activePokemon}\r\n                                                         setActivePokemon={setActivePokemon}\r\n                                                         setPokeMenu={setPokeMenu}/> :\r\n                <>\r\n                    <div className={'d-flex battle-screen'}>\r\n                        <Col lg={6} className={'left-field'}>\r\n                            <Row className={'mt-3'}>\r\n                                <NameSection pokemon={activeEnemyPokemon}/>\r\n                                <div className={'position-relative w-75 mx-auto card-arrow'}/>\r\n                            </Row>\r\n                            <Row>\r\n                                <img className={'w-75 mt-5 poke-image mirror'} src={activePokemon.image} alt=\"\"/>\r\n                            </Row>\r\n                            <Row style={{height: '0'}}>\r\n                                <img\r\n                                    src=\"https://firebasestorage.googleapis.com/v0/b/pokemon-battle-f40d2.appspot.com/o/battle_podia.png?alt=media&token=21348cd1-ea50-4ea2-ab4c-c9d4ba6d6042\"\r\n                                    alt=\"\"\r\n                                    className={'w-75 position-relative poke-stadia'}\r\n                                />\r\n                            </Row>\r\n                        </Col>\r\n                        <Col lg={6} className={'right-field'}>\r\n                            <Row>\r\n                                <img className={'w-75 mt-5 ms-auto mirror poke-image'} src={activeEnemyPokemon.image}\r\n                                     alt=\"\"/>\r\n                            </Row>\r\n                            <Row style={{height: '25px'}}>\r\n                                <img\r\n                                    src=\"https://firebasestorage.googleapis.com/v0/b/pokemon-battle-f40d2.appspot.com/o/battle_podia.png?alt=media&token=21348cd1-ea50-4ea2-ab4c-c9d4ba6d6042\"\r\n                                    alt=\"\"\r\n                                    className={'w-75 position-relative ms-auto poke-stadia mirror'}\r\n                                />\r\n                            </Row>\r\n                            <Row>\r\n                                <NameSection pokemon={activePokemon} className={'ms-auto'} friend={true}/>\r\n                                <div className={'position-relative w-75 mx-auto card-arrow mirror'}/>\r\n                            </Row>\r\n                        </Col>\r\n                    </div>\r\n                    {pokeMenu === 'start' && <PokeOptions activePokemon={activePokemon} setPokeMenu={setPokeMenu}/>}\r\n                    {pokeMenu === 'battle' && <PokeBattleButton moves={activePokemon.moves} setPokeMenu={setPokeMenu}/>}\r\n                </>\r\n            }\r\n        </Container>\r\n    </section>\r\n}\r\n\r\nfunction PokemonChangeMenu(props) {\r\n    const {pokemonTeam, activePokemon, setActivePokemon, setPokeMenu} = props\r\n    return <Container>\r\n        <Row lg={2} className={'g-4'}>\r\n            {pokemonTeam.map((pokemon, i)=><PokeChangeFrames key={i}\r\n                                                             activePokemon={activePokemon.name === pokemon.name}\r\n                                                             setActivePokemon={setActivePokemon}\r\n                                                             setPokeMenu={setPokeMenu}\r\n                                                             pokemon={pokemon}/>)}\r\n        </Row>\r\n        <div className={'mt-3'}><button onClick={()=>setPokeMenu('start')} className={'poke-option-button w-100 btn bg-light'}>Back</button></div>\r\n    </Container>\r\n}\r\n\r\nfunction PokeChangeFrames(props) {\r\n    const {activePokemon, pokemon, setActivePokemon, setPokeMenu} = props\r\n    const gender = GetGender(pokemon.gender)\r\n    console.log(pokemon)\r\n    const changePokemon = (pokemon) => {\r\n        setActivePokemon(pokemon)\r\n        setPokeMenu('start')\r\n    }\r\n    return <Col>\r\n        <Card className={activePokemon ? 'border-3 border-primary bg-yellow' : ''} onClick={()=>changePokemon(pokemon)}>\r\n            <Row className={'mt-2'}>\r\n                <Col lg={4}>\r\n                    <img src={pokemon.image} alt=\"\" style={{height: '10rem'}}/>\r\n                </Col>\r\n                <Col lg={8}>\r\n                    <div className={'text-capitalize h3'}><span className={'text-capitalize h4'}>{pokemon.name} <span className={'ms-2 text-primary'}><MDBIcon icon={gender}/></span></span></div>\r\n                    <div>{pokemon.types.map((type, i)=>{return <span key={i} className={'text-capitalize'}>{`${type.type.name} `}</span>})}</div>\r\n                    <Row lg={2} style={{height: '70px'}} className={'me-2'}>\r\n                        <Col className={'d-flex'}>\r\n                            <div className={'align-self-end'}>\r\n                                {pokemon.stats.statusEffect.map((effect, i)=>{return <PokeStatus key={i} status={effect}/>})}\r\n                            </div>\r\n                        </Col>\r\n                        <Col>\r\n                            <div className={'w-100 my-auto d-flex rounded text-light ps-2 bg-green'}>\r\n                                <span className={'text-yellow'}>HP</span>\r\n                                <div className={'w-100 my-auto mx-2'}>\r\n                                    <ProgressBar now={pokemon.stats.currentHeath.base_stat} min={0} max={pokemon.stats.health.base_stat} variant={'success'}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className={'text-right me-3'}>\r\n                                {`${pokemon.stats.currentHeath.base_stat} / ${pokemon.stats.health.base_stat}`}\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </Card>\r\n    </Col>\r\n}\r\n\r\nconst getEffectColour = (effect) => {\r\n    switch(effect) {\r\n        case 'fainted':\r\n            return 'danger'\r\n        case 'burn':\r\n            return 'warning'\r\n        case 'confusion':\r\n        case 'paralysed':\r\n            return 'secondary'\r\n        default:\r\n            return 'primary'\r\n    }\r\n}\r\n\r\nfunction PokeStatus(props){\r\n    const {status} = props\r\n    const effect = getEffectColour(status)\r\n    return <Badge className={'p-2'} pill bg={effect}>{status}</Badge>\r\n}\r\n\r\nfunction PokeOptions (props) {\r\n    const {activePokemon, setPokeMenu} = props\r\n    const [message, setMessage] = useState(`What will ${activePokemon.name} do?`)\r\n\r\n    return <RoundedDiv color={'bg-green'}>\r\n        <div className={'p-2 battle-option-screen m-0 d-flex'}>\r\n            <PokeMessage message={message}/>\r\n            <Col lg={6} className={'m-0 bg-beige row rounded-3'}>\r\n                <PokeStartButton buttons={['fight', 'pokemon', 'bag', 'flee']} setMessage={setMessage} setPokeMenu={setPokeMenu}/>\r\n            </Col>\r\n        </div>\r\n    </RoundedDiv>\r\n}\r\n\r\nfunction RoundedDiv(props) {\r\n    const {color, children} = props\r\n    return <div className={`rounded-3 p-1 ${color}`}>\r\n        {children}\r\n    </div>\r\n}\r\n\r\nfunction PokeMessage(props){\r\n    const {message} = props\r\n    return <Col lg={6} className={'m-0'}>\r\n        <RoundedDiv color={'bg-green'}>\r\n            <RoundedDiv color={'bg-yellow'}>\r\n                <RoundedDiv color={'bg-green'}>\r\n                    <div className={'bg-beige battle-option-text p-2'}>\r\n                        {message}\r\n                    </div>\r\n                </RoundedDiv>\r\n            </RoundedDiv>\r\n        </RoundedDiv>\r\n    </Col>\r\n}\r\n\r\nfunction PokeBattleButton(props) {\r\n    const {setPokeMenu, moves} = props\r\n    console.log(moves)\r\n\r\n    return <RoundedDiv color={'bg-green'}>\r\n        <Container>\r\n            <Row col={2}>\r\n                {moves.map((move, i)=><PokeMoveButton key={i} move={move}/>)}\r\n            </Row>\r\n            <div><button onClick={()=>setPokeMenu('start')} className={'poke-option-button w-100 btn bg-light'}>Back</button></div>\r\n        </Container>\r\n    </RoundedDiv>\r\n}\r\n\r\nfunction PokeMoveButton(props) {\r\n    const {move} = props\r\n    return <Col>\r\n        <OverlayTrigger overlay={\r\n            <Tooltip>\r\n                {move.description[0].flavor_text}\r\n            </Tooltip>\r\n        } placement={'top'} defaultShow={false} delay={500}>\r\n        <button className={'poke-option-button w-100 btn bg-light'}>\r\n            <div className={'font-weight-bold'}>{move.name}</div>\r\n            <div className={'text-muted'}>{`${move.currentPP}/${move.pp}`}</div>\r\n        </button>\r\n        </OverlayTrigger>\r\n    </Col>\r\n}\r\n\r\nfunction PokeStartButton(props) {\r\n    const {buttons, setMessage, setPokeMenu} = props\r\n    const history = useHistory()\r\n\r\n    const click = (button) => {\r\n        switch (button) {\r\n            case 'fight' :\r\n                setPokeMenu('battle')\r\n                break\r\n            case 'pokemon':\r\n                setPokeMenu('pokemon')\r\n                break\r\n            case 'bag':\r\n                setPokeMenu('bag')\r\n                break\r\n            case 'flee':\r\n                setMessage('you have fled')\r\n                setTimeout(function(){history.push('/')}, 1000)\r\n                break\r\n            default:\r\n                setPokeMenu('start')\r\n        }\r\n    }\r\n    return <>\r\n        {buttons.map((button, i)=>{return <Col lg={6} key={i}><button onClick={()=>click(button)} className={`poke-option-button w-100 btn ${button}`}>{button}</button></Col>})}\r\n        </>\r\n}\r\n\r\nfunction NameSection(props) {\r\n    const {pokemon, friend, className} = props\r\n    const gender = GetGender(pokemon.gender)\r\n    return <div>\r\n        <Card className={className + ' px-3 py-1 pokemon-card bg-beige'}>\r\n            <Card.Title><span className={'text-capitalize h4'}>{pokemon.name} <span className={'ms-2 text-primary'}><MDBIcon icon={gender}/></span></span></Card.Title>\r\n            <div className={'d-flex justify-content-between'}>\r\n                <img src=\"https://firebasestorage.googleapis.com/v0/b/pokemon-battle-f40d2.appspot.com/o/Poke-Ball-32.png?alt=media&token=9513774d-f6e3-474b-988f-490c7f58ff08\"\r\n                     alt=\"\"/>\r\n                <div className={'w-75 my-auto d-flex rounded text-light ps-2 bg-green'}>\r\n                    <span className={'text-yellow'}>HP</span>\r\n                    <div className={'w-100 my-auto mx-2'}>\r\n                        <ProgressBar now={pokemon.stats.currentHeath.base_stat} min={0} max={pokemon.stats.health.base_stat} variant={'success'}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Row lg={2} className={'mt-1'}>\r\n                <Col lg={6}>\r\n                    {pokemon.stats.statusEffect.map((effect, i)=>{return <PokeStatus key={i} status={effect}/>})}\r\n                </Col>\r\n                <Col lg={6}>\r\n                    {friend && <div className={'text-right'}>\r\n                        {`${pokemon.stats.currentHeath.base_stat} / ${pokemon.stats.health.base_stat}`}\r\n                    </div>}\r\n                </Col>\r\n            </Row>\r\n        </Card>\r\n    </div>\r\n}","import './App.css';\r\nimport {Navigation} from \"./components/Navigation\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {PokemonSection} from \"./components/pokemon\";\r\nimport {PokemonTeamProvider} from \"./contexts/PokemonTeamContext\";\r\nimport {EnemyPokemonTeamProvider} from \"./contexts/EnemyPokemonTeam\";\r\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport {BattleSection} from \"./components/Battle\";\r\n\r\nfunction DefaultComp(props) {\r\n    return <div className=\"App\">\r\n        <Navigation/>\r\n        {props.children}\r\n    </div>;\r\n}\r\n\r\nfunction ProvidedApp() {\r\n    return <Switch>\r\n            <Route path={'/battle'}>\r\n                <DefaultComp>\r\n                    <BattleSection/>\r\n                </DefaultComp>\r\n            </Route>\r\n        <Route path={'/'}>\r\n            <DefaultComp>\r\n                <PokemonSection/>\r\n            </DefaultComp>\r\n        </Route>\r\n        </Switch>\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n        <PokemonTeamProvider>\r\n            <EnemyPokemonTeamProvider>\r\n                <ProvidedApp/>\r\n            </EnemyPokemonTeamProvider>\r\n        </PokemonTeamProvider>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
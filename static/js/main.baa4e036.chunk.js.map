{"version":3,"sources":["components/Navigation.js","components/generalComponents/Cards.js","services/fetch.js","contexts/PokemonTeamContext.js","contexts/EnemyPokemonTeam.js","components/pokemon.js","contexts/bagContext.js","services/fetchTypes.js","contexts/BattleContext.js","components/Battle.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","Navbar","bg","variant","expand","Container","className","Brand","src","height","alt","Toggle","Collapse","id","Nav","to","PokemonCard","props","pokemon","useState","open","setOpen","gender","GetGender","Card","Img","image","Body","Title","name","icon","types","map","t","i","type","ListGroup","moves","m","console","log","description","OverlayTrigger","overlay","Tooltip","flavor_text","placement","defaultShow","delay","ListGroupItem","Object","entries","stats","s","ListItemStat","value","Button","onClick","base_stat","getImage","data","sprites","other","front_default","getFourMoves","a","length","typeMoves","move","typeMovesFiltered","forEach","push","find","moveType","moveArray","Promise","all","getMoveInfo","moveResult","currentPP","pp","getAbility","abilities","ability","Math","round","random","getAbilityInfo","url","generatePokemonTeam","getTotalPokemonCount","totalPokemon","team","fetch","fetchOnePokemon","fetchedPokemon","undefined","then","response","json","String","currentHealth","health","attack","defense","speed","statusEffect","species","getGender","results","count","ok","effect","effect_entries","effect_chance","accuracy","damage_class","flavor_text_entries","filter","text","power","target","responseBody","error","status","message","PokemonTeamContext","createContext","PokemonTeamProvider","JSON","parse","localStorage","getItem","pokemonTeam","setPokemonTeam","tries","setTries","activePokemon","setActivePokemon","generateTeam","useCallback","setItem","stringify","updateTeam","newTeam","api","useMemo","Provider","children","usePokemonTeamContext","useContext","EnemyPokemonTeamContext","EnemyPokemonTeamProvider","enemyPokemonTeam","setEnemyPokemonTeam","activeEnemyPokemon","setActiveEnemyPokemon","generateEnemyTeam","updateEnemyTeam","useEnemyPokemonTeamContext","PokemonSection","fluid","style","borderRadius","PokemonButton","PokemonCards","setMessage","showToast","setShowToast","Spinner","animation","size","ToastContainer","position","zIndex","Toast","onClose","show","autohide","Header","Row","xl","p","Col","BagContext","BagProvider","amount","bag","setBag","updateBag","useEffect","fetchDataTypeEffectiveness","result","errorMessage","errors","reduce","accumulator","defaultMessage","BattleContext","BattleProvider","fighting","setFighting","pokeMenu","setPokeMenu","firstAttack","friendMove","enemyMove","attackDamage","executor","typeEffectivenessChart","typeEffectivenessPercentArray","executorType","targetType","capitalize","flat","typeDamage","b","attackPower","defensePower","randomDamage","floor","moveExecution","includes","damage","checkFainted","checkStatusEffect","isNotEmpty","endBattle","friendPokemon","enemyPokemon","indexFriend","findIndex","tempFriendTeam","tempEnemyTeam","indexEnemy","notFainted","newEnemy","battle","firsAttack","setTimeout","word","lower","toLowerCase","charAt","toUpperCase","slice","useBattleContext","BattleSection","PokemonChangeMenu","BagScreen","lg","NameSection","friend","PokeOptions","PokeBattleButton","object","setTarget","targetItem","setTargetItem","targetMove","setTargetMove","modalShow","setModalShow","item","PokeItemChooseModal","onHide","BagCard","Badge","pill","in","consumeItem","selectTarget","Modal","centered","closeButton","PokeStatus","ProgressBar","now","min","max","active","Footer","PokeChangeFrames","changePokemon","getEffectColour","RoundedDiv","color","PokeMessage","PokeStartButton","buttons","col","PokeMoveButton","history","useHistory","button","click","disabled","DefaultComp","ProvidedApp","path","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.baa4e036.chunk.js","sourcesContent":["import {Container, Nav, Navbar} from \"react-bootstrap\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport function Navigation() {\r\n    return <>\r\n        <Navbar bg={'dark'} variant={'dark'} expand={'lg'}>\r\n            <Container className={'d-flex justify-content-center'}>\r\n                <Navbar.Brand>\r\n                    <img className=\"d-inline-block align-top\"\r\n                         src='https://firebasestorage.googleapis.com/v0/b/pokemon-battle-f40d2.appspot.com/o/pokemon_logo.png?alt=media&token=911b4fce-0aac-4ee4-8e8e-308472d9997a'\r\n                         height=\"40\"\r\n                         alt=\"\"/>\r\n                    <span className={'text-light ms-5 h2'}>Pokemon battle</span>\r\n                </Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"me-auto\">\r\n                        <Link to={'/'} className={'nav-link'}>Home</Link>\r\n                        <Link to={'/battle'} className={'nav-link'}>Battle</Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    </>\r\n\r\n}","import {Button, Card, ListGroup, ListGroupItem, OverlayTrigger, Tooltip} from \"react-bootstrap\";\r\nimport {useState} from \"react\";\r\nimport {MDBIcon} from \"mdbreact\";\r\n\r\nexport function PokemonCard (props) {\r\n    const {pokemon} = props\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const gender = GetGender(pokemon.gender)\r\n\r\n    return <>\r\n        <Card>\r\n            <Card.Img variant={'top'}\r\n                      src={pokemon.image}/>\r\n            <Card.Body>\r\n                <Card.Title>\r\n                    <h2 className={'text-capitalize'}>{pokemon.name} <MDBIcon icon={gender}/></h2>\r\n                    {pokemon.types.map((t, i)=> <small className={'text-muted'} key={i}>{t.type.name} </small>)}\r\n                </Card.Title>\r\n                {open &&\r\n                    <div>\r\n                        <h5>Moves : </h5>\r\n                        <ListGroup className={'list-group-flush'}>\r\n                            {pokemon.moves.map((m, i)=>{\r\n                                console.log('pokemon', pokemon)\r\n                                console.log('moves :', m)\r\n                                return <>{m.description && <OverlayTrigger key={i} overlay={\r\n                                        <Tooltip>\r\n                                            {m.description.flavor_text}\r\n                                        </Tooltip>\r\n                                    } placement={'top'} defaultShow={false} delay={500}>\r\n                                        <ListGroupItem className={'text-capitalize'}>{m.name}</ListGroupItem>\r\n                                    </OverlayTrigger>}</>\r\n                            })}\r\n                        </ListGroup>\r\n                        {/*<Card.Text>*/}\r\n                        {/*    {pokemon.ability && <OverlayTrigger overlay={*/}\r\n                        {/*        <Tooltip>*/}\r\n                        {/*            {pokemon.ability.description[0].flavor_text}*/}\r\n                        {/*        </Tooltip>*/}\r\n                        {/*    } placement={'top'} defaultShow={false} delay={500}>*/}\r\n                        {/*        <span><span className={'h5'}>Ability</span> : {pokemon.ability.name}</span>*/}\r\n                        {/*    </OverlayTrigger>*/}\r\n                        {/*        }*/}\r\n                        {/*</Card.Text>*/}\r\n                        <h5>Stats :</h5>\r\n                        <ListGroup className={'list-group-flush'}>\r\n                            {Object.entries(pokemon.stats).map((s, i)=>{\r\n                                return s[0] !== 'statusEffect' && <ListItemStat name={s[0]} value={s[1]} key={i}/>\r\n                            })}\r\n                        </ListGroup>\r\n                    </div>\r\n                }\r\n                <Button className={'my-2 w-100'} onClick={()=>setOpen(!open)}>{open ? 'Hide extra info' : 'Show extra info'}</Button>\r\n            </Card.Body>\r\n        </Card>\r\n    </>\r\n}\r\n\r\nfunction ListItemStat(props){\r\n    const {name, value} = props;\r\n    return <ListGroupItem className={'text-capitalize'}>{`${name} : ${value.base_stat}`}</ListGroupItem>\r\n}\r\n\r\nexport const GetGender = (gender) => {\r\n    switch (gender) {\r\n        case 'genderless':\r\n            return 'genderless'\r\n        case 'male' :\r\n            return 'mars'\r\n        case 'female' :\r\n            return 'venus'\r\n        default :\r\n            return \"genderless\"\r\n    }\r\n}","function getImage(data) {\r\n    return data.sprites.other[\"official-artwork\"].front_default\r\n}\r\n\r\nasync function getFourMoves(moves, types) {\r\n    if (moves.length < 1) return []\r\n    if (moves.length <= 4) return moves\r\n    // too hard to implement the effects of the moves in current stage.\r\n    // for (let i = 0; i < 4; i++) {\r\n    //     const move = moves[Math.round(Math.random() * (moves.length - 1))].move\r\n    //     const moveStat = await getMoveInfo(move.url)\r\n    //     result.push({...moveStat, name: move.name, currentPP: moveStat.pp, type: moveStat.type})\r\n    // }\r\n    const typeMoves = [\r\n        {\r\n            type: 'normal',\r\n            move: 'cut'\r\n        },\r\n        {\r\n            type: 'fighting',\r\n            move: 'focus-blast'\r\n        },\r\n        {\r\n            type: 'flying',\r\n            move: 'roost'\r\n        },\r\n        {\r\n            type: 'poison',\r\n            move: 'poison-powder'\r\n        },\r\n        {\r\n            type: 'ground',\r\n            move: 'mud-shot'\r\n        },\r\n        {\r\n            type: 'rock',\r\n            move: 'head-smash'\r\n        },\r\n        {\r\n            type: 'bug',\r\n            move: 'twineedle'\r\n        },\r\n        {\r\n            type: 'ghost',\r\n            move: 'confuse-ray'\r\n        },\r\n        {\r\n            type: 'steel',\r\n            move: 'bullet-punch'\r\n        },\r\n        {\r\n            type: 'fire',\r\n            move: 'ember'\r\n        },\r\n        {\r\n            type: 'water',\r\n            move: 'water-pulse'\r\n        },\r\n        {\r\n            type: 'ice',\r\n            move: 'ice-shard'\r\n        },\r\n        {\r\n            type: 'grass',\r\n            move: 'absorb'\r\n        },\r\n        {\r\n            type: 'electric',\r\n            move: 'spark'\r\n        },\r\n        {\r\n            type: 'psychic',\r\n            move: 'confusion'\r\n        },\r\n        {\r\n            type: 'dragon',\r\n            move: 'dragon-breath'\r\n        },\r\n        {\r\n            type: 'dark',\r\n            move: 'bite'\r\n        },\r\n        {\r\n            type: 'fairy',\r\n            move: 'moonblast'\r\n        }\r\n    ]\r\n    const typeMovesFiltered = []\r\n    types.forEach(type=>{\r\n        typeMovesFiltered.push(typeMoves.find(moveType=>moveType.type === type.type.name))\r\n    })\r\n    const moveArray = ['scratch', 'tail-whip']\r\n    typeMovesFiltered.forEach(move=>moveArray.push(move.move))\r\n    if (moveArray.length <= 3){moveArray.push('sing')}\r\n\r\n    return Promise.all(moveArray.map(async move => {\r\n        const moveResult = await getMoveInfo(`https://pokeapi.co/api/v2/move/${move}`)\r\n        // console.log('move result :', moveResult)\r\n        console.log('move result object :', move)\r\n        return {...moveResult, name: move, currentPP: moveResult.pp};\r\n        // console.log('results:', result)\r\n    }))\r\n}\r\n\r\nasync function getAbility(abilities) {\r\n    const ability = abilities[Math.round(Math.random() * (abilities.length -1))]\r\n    return await getAbilityInfo(ability.ability.url)\r\n}\r\n\r\nexport async function generatePokemonTeam() {\r\n    const totalPokemon = await getTotalPokemonCount()\r\n    const team = []\r\n    for (let i = 0; i < 6; i++) {\r\n        let fetchedPokemon = undefined\r\n        async function fetch () {\r\n             fetchedPokemon = await fetchOnePokemon(Math.round((Math.random() * (totalPokemon-1))+1))\r\n        }\r\n        await fetch()\r\n            .then(()=>{\r\n            if (fetchedPokemon === undefined) fetch()\r\n        }).then(()=>{\r\n                team.push(fetchedPokemon)\r\n            })\r\n    }\r\n    return team\r\n}\r\n\r\nexport async function fetchOnePokemon(id) {\r\n    const response = await fetch(`https://pokeapi.co/api/v2/pokemon/${id}`);\r\n    const data = await response.json();\r\n    if (data.moves.length < 1) {\r\n        console.log('retry, failed id:', id)\r\n        const totalPokemon = await getTotalPokemonCount()\r\n        return await fetchOnePokemon(Math.round((Math.random() * (totalPokemon-1))+1))\r\n    }\r\n    console.log(data)\r\n    return {\r\n        id: String(data.id),\r\n        name: data.name,\r\n        image: getImage(data),\r\n        ability: await getAbility(data.abilities),\r\n        moves: await getFourMoves(data.moves, data.types),\r\n        stats: {\r\n            currentHealth: data.stats[0],\r\n            health: data.stats[0],\r\n            attack: data.stats[1],\r\n            defense: data.stats[2],\r\n            'special attack': data.stats[3],\r\n            'special defense': data.stats[4],\r\n            speed: data.stats[5],\r\n            statusEffect: ['test']\r\n        },\r\n        types: data.types,\r\n        species: data.species.url,\r\n        gender: await getGender(data.name)\r\n    };\r\n}\r\n\r\nasync function getGender(name) {\r\n    const response = await  fetch(`https://pokeapi.co/api/v2/gender/?name=${name}`)\r\n    const data = await response.json()\r\n    return data.results[Math.round(Math.random() * (data.results.length-1))].name\r\n}\r\n\r\nexport async function getTotalPokemonCount() {\r\n    const response = await fetch('https://pokeapi.co/api/v2/pokemon-species/?limit=0')\r\n    const data = await response.json()\r\n    return data.count\r\n}\r\n\r\nexport async function getMoveInfo(url){\r\n    let data = undefined\r\n    try {\r\n        const response = await fetch(url)\r\n        if (response.ok){\r\n            data = await response.json()\r\n            console.log(`fetched data ${url}`, data)\r\n            const effect = data.effect_entries.length > 0 ? {'effect chance': data.effect_chance,\r\n                'effect description': data.effect_entries[0].effect} : {}\r\n            return {\r\n                name: data.name,\r\n                accuracy: data.accuracy,\r\n                'damage class': data.damage_class,\r\n                description: data.flavor_text_entries.filter(text=> text['language']['name']==='en')[0],\r\n                pp: data.pp,\r\n                effect: effect,\r\n                power: data.power,\r\n                target: data.target\r\n            }\r\n        } else {\r\n            const responseBody = await response.json()\r\n            console.error((`ERROR: ${responseBody.status} - ${responseBody.error} - ${responseBody.message}`))\r\n        }\r\n    } catch (e) {\r\n        console.error(e)\r\n    }\r\n}\r\n\r\nexport async function getAbilityInfo(url){\r\n    const response = await fetch(url)\r\n    const data = await response.json().then()\r\n    return {\r\n        name: data.name,\r\n        id: data.id,\r\n        description: data.flavor_text_entries.filter(text=> text['language']['name']==='en')\r\n    }\r\n}","import {createContext, useCallback, useContext, useMemo, useState} from \"react\";\r\nimport {generatePokemonTeam} from \"../services/fetch\";\r\n\r\nconst PokemonTeamContext = createContext()\r\n\r\nexport function PokemonTeamProvider (props) {\r\n    const [pokemonTeam, setPokemonTeam] = useState(JSON.parse(localStorage.getItem('pokemonTeam')) || [])\r\n    const [tries, setTries] = useState(localStorage.getItem('tries') || 3)\r\n    const [activePokemon, setActivePokemon] = useState(JSON.parse(localStorage.getItem('activePokemon')) || pokemonTeam[0] || {})\r\n\r\n    const generateTeam = useCallback(async ()=>{\r\n        const team = await generatePokemonTeam()\r\n        console.log(team)\r\n        localStorage.setItem('pokemonTeam', JSON.stringify(team))\r\n        setTries(tries-1)\r\n        localStorage.setItem('tries', tries)\r\n        localStorage.setItem('activePokemon', JSON.stringify(team[0]))\r\n        setPokemonTeam(team)\r\n        setActivePokemon(team[0])\r\n    }, [setPokemonTeam, tries, setTries, setActivePokemon])\r\n\r\n    const updateTeam = useCallback((newTeam)=>{\r\n        setPokemonTeam(newTeam)\r\n        localStorage.setItem('pokemonTeam', JSON.stringify(newTeam))\r\n    }, [setPokemonTeam])\r\n\r\n    const api = useMemo(()=>({\r\n        pokemonTeam,\r\n        generateTeam,\r\n        tries,\r\n        updateTeam,\r\n        activePokemon,\r\n        setActivePokemon\r\n    }),[pokemonTeam,\r\n        generateTeam,\r\n        tries,\r\n        updateTeam,\r\n        activePokemon,\r\n        setActivePokemon\r\n    ])\r\n\r\n    return <PokemonTeamContext.Provider value={api}>\r\n        {props.children}\r\n    </PokemonTeamContext.Provider>\r\n}\r\n\r\nexport const usePokemonTeamContext = () =>useContext(PokemonTeamContext)","import {createContext, useCallback, useContext, useMemo, useState} from \"react\";\r\nimport {generatePokemonTeam} from \"../services/fetch\";\r\n\r\nconst EnemyPokemonTeamContext = createContext()\r\n\r\nexport function EnemyPokemonTeamProvider (props) {\r\n    const [enemyPokemonTeam, setEnemyPokemonTeam] = useState(JSON.parse(localStorage.getItem('enemyPokemonTeam')) || [])\r\n    const [activeEnemyPokemon, setActiveEnemyPokemon] = useState(JSON.parse(localStorage.getItem('activeEnemyPokemon')) || enemyPokemonTeam[0] || {})\r\n\r\n    const generateEnemyTeam = useCallback(async ()=>{\r\n        const team = await generatePokemonTeam()\r\n        console.log(team)\r\n        localStorage.setItem('enemyPokemonTeam', JSON.stringify(team))\r\n        setEnemyPokemonTeam(team)\r\n        setActiveEnemyPokemon(team[0])\r\n    }, [setEnemyPokemonTeam, setActiveEnemyPokemon])\r\n\r\n    const updateEnemyTeam = useCallback((newTeam)=>{\r\n        setEnemyPokemonTeam(newTeam)\r\n        localStorage.setItem('enemyPokemonTeam', JSON.stringify(newTeam))\r\n    }, [])\r\n\r\n    const api = useMemo(()=>({\r\n        enemyPokemonTeam,\r\n        generateEnemyTeam,\r\n        updateEnemyTeam,\r\n        activeEnemyPokemon,\r\n        setActiveEnemyPokemon,\r\n    }),[activeEnemyPokemon, enemyPokemonTeam, generateEnemyTeam, updateEnemyTeam])\r\n\r\n    return <EnemyPokemonTeamContext.Provider value={api}>\r\n        {props.children}\r\n    </EnemyPokemonTeamContext.Provider>\r\n}\r\n\r\nexport const useEnemyPokemonTeamContext = () => useContext(EnemyPokemonTeamContext)","import {Button, Col, Container, Row, Spinner, Toast, ToastContainer} from \"react-bootstrap\";\r\nimport {PokemonCard} from \"./generalComponents/Cards\";\r\nimport {usePokemonTeamContext} from \"../contexts/PokemonTeamContext\";\r\nimport {useState} from \"react\";\r\nimport {useEnemyPokemonTeamContext} from \"../contexts/EnemyPokemonTeam\";\r\n\r\nexport function PokemonSection() {\r\n    return <Container fluid className={'px-5 mt-3'}>\r\n        <fieldset className={'border border-3 px-4 py-2'} style={{borderRadius: '25px'}}>\r\n            <div className={'d-flex justify-content-around'}>\r\n                <h1>My Team</h1>\r\n                <PokemonButton/>\r\n            </div>\r\n            <PokemonCards/>\r\n        </fieldset>\r\n    </Container>\r\n}\r\n\r\nfunction PokemonButton () {\r\n    const {generateTeam, tries} = usePokemonTeamContext()\r\n    const {generateEnemyTeam} = useEnemyPokemonTeamContext()\r\n    const [message, setMessage] = useState('Generate your team')\r\n    const [showToast, setShowToast] = useState(false)\r\n\r\n    const clickButton = () => {\r\n        setMessage('Generating...')\r\n        generateEnemyTeam()\r\n        generateTeam().then(()=>{\r\n            setMessage('Generate your team')\r\n            setShowToast(true)\r\n        })\r\n    }\r\n\r\n    return <div className={'text-center'}>\r\n        {tries >= 0 && <Button className={'m-2'} onClick={()=>clickButton()}>{message === 'Generating...' ? <Spinner animation=\"border\" size={'sm'}/> : ''}{message}</Button>}\r\n        {showToast &&\r\n            <ToastContainer position={'top-center'} className={'mt-5'} style={{zIndex: '10000'}}>\r\n                <Toast onClose={() => setShowToast(false)} show={showToast} delay={5000} autohide animation={true}>\r\n                    <Toast.Header>\r\n                        <strong className=\"me-auto\">Successfully generated a new team</strong>\r\n                    </Toast.Header>\r\n                    <Toast.Body>{`${tries +1} generation attempt(s) remaining`}</Toast.Body>\r\n                </Toast>\r\n            </ToastContainer>\r\n        }\r\n    </div>\r\n}\r\n\r\nfunction PokemonCards () {\r\n    const {pokemonTeam} = usePokemonTeamContext()\r\n    return <Row xl={6}>\r\n        {pokemonTeam.map((p, i)=>{\r\n            return <Col key={i}>\r\n                <PokemonCard pokemon={p}/>\r\n            </Col>\r\n        })}\r\n    </Row>\r\n}","import {createContext, useCallback, useContext, useEffect, useMemo, useState} from \"react\";\r\n\r\nconst BagContext = createContext()\r\n\r\nexport function BagProvider (props) {\r\n    const [bag, setBag] = useState(JSON.parse(localStorage.getItem('bag')) || [\r\n        {\r\n            name: 'ether',\r\n            amount: 5,\r\n            description: \"It restores the PP of a Pokemon's selected move by a maximum of 10 points.\"\r\n        },\r\n        {\r\n            name: 'fresh water',\r\n            amount: 2,\r\n            description: 'Restores 30 HP.'\r\n        },\r\n        {\r\n            name: 'full heal',\r\n            amount: '3',\r\n            description: 'A spray-type medicine. It heals all the status problems of a single Pokemon.'\r\n        },\r\n        {\r\n            name: 'full restore',\r\n            amount: 2,\r\n            description: 'A medicine that fully restores the HP and heals any status problems of a single Pokemon.'\r\n        },\r\n        {\r\n            name: 'revive',\r\n            amount: 2,\r\n            description: \"A medicine that revives a fainted Pokémon. It restores half the Pokemon's maximum HP.\"\r\n        }\r\n    ])\r\n\r\n    const updateBag = useCallback((bag)=>{\r\n        setBag(bag)\r\n        localStorage.setItem('bag', JSON.stringify(bag))\r\n    }, [setBag])\r\n\r\n    useEffect(()=>{\r\n        localStorage.setItem('bag', JSON.stringify(bag))\r\n    }, [bag])\r\n\r\n    const api = useMemo(()=>({\r\n            bag,\r\n            updateBag\r\n    }), [bag, updateBag])\r\n\r\n    return <BagContext.Provider value={api}>\r\n        {props.children}\r\n    </BagContext.Provider>\r\n}\r\n\r\nexport const useBagContext = () => useContext(BagContext)","//https://pogoapi.net/api/v1/type_effectiveness.json\r\n\r\nexport async function fetchDataTypeEffectiveness() {\r\n    let result = undefined\r\n    try {\r\n        console.log('fetching chart')\r\n        const response = await fetch('https://pogoapi.net/api/v1/type_effectiveness.json');\r\n        // console.log({response});\r\n        if (response.ok) {\r\n            result = await response.json();\r\n            console.log('fetching succeeded')\r\n        } else {\r\n            const responseBody = await response.json();\r\n            console.error(`ERROR: ${response.status} - ${responseBody.error} - ${responseBody.message} `);\r\n            const errorMessage = responseBody.errors &&\r\n                responseBody.errors.reduce((accumulator, error) => `${accumulator} ${error.defaultMessage}  --- `, \"--- \");\r\n            console.log(`   ${JSON.stringify(responseBody)}`);\r\n            console.log(`   ${errorMessage}`);\r\n        }\r\n    } catch (e) {\r\n        console.error(`ERROR: ${e}`);\r\n        console.error(\"Connection error\");\r\n    }\r\n    return result\r\n}","import {createContext, useCallback, useContext, useMemo, useState} from \"react\";\r\nimport {usePokemonTeamContext} from \"./PokemonTeamContext\";\r\nimport {useEnemyPokemonTeamContext} from \"./EnemyPokemonTeam\";\r\nimport {isNotEmpty} from \"../components/Battle\";\r\nimport {fetchDataTypeEffectiveness} from \"../services/fetchTypes\";\r\n\r\nconst BattleContext = createContext()\r\n\r\nexport function BattleProvider(props) {\r\n    const {pokemonTeam, updateTeam, activePokemon} = usePokemonTeamContext()\r\n    const {enemyPokemonTeam, updateEnemyTeam, activeEnemyPokemon, setActiveEnemyPokemon} = useEnemyPokemonTeamContext()\r\n\r\n    const [fighting, setFighting] = useState(false)\r\n    const [pokeMenu, setPokeMenu] = useState('start')\r\n    const [message, setMessage] = useState(`What will ${activePokemon.name} do?`)\r\n\r\n\r\n    const firstAttack = useCallback((friendMove, enemyMove) => {\r\n        console.log(enemyMove)\r\n        if (friendMove.name === 'bullet-punch' || friendMove.name === 'ice-shard') return 'friend'\r\n        if (enemyMove.name === 'bullet-punch' || enemyMove.name === 'ice-shard') return 'enemy'\r\n        return activePokemon.stats.speed.base_stat > activeEnemyPokemon.stats.speed.base_stat ? 'friend' :\r\n            activePokemon.stats.speed.base_stat < activeEnemyPokemon.stats.speed.base_stat ? 'enemy' :\r\n                Math.random() >= 0.5 ? 'friend' : 'enemy'\r\n    }, [activeEnemyPokemon, activePokemon])\r\n\r\n    const attackDamage = useCallback(async (move, executor, target) => {\r\n        const typeEffectivenessChart = await fetchDataTypeEffectiveness()\r\n        const typeEffectivenessPercentArray = executor.types.map(executorType=>{\r\n            return target.types.map(targetType=>{\r\n                return typeEffectivenessChart[capitalize(executorType.type.name)][capitalize(targetType.type.name)]\r\n            })\r\n        }).flat()\r\n        const typeDamage =  typeEffectivenessPercentArray.reduce((a, b) => (a + b)) / typeEffectivenessPercentArray.length\r\n        const attackPower = move['damage class'].name === 'physical' ? executor.stats.attack.base_stat : executor.stats['special attack'].base_stat\r\n        const defensePower = move['damage class'].name === 'physical' ? target.stats.defense.base_stat : target.stats['special defense'].base_stat\r\n        const randomDamage = (85 + Math.round((Math.random() * ((100 - 85) + 1)))) / 100\r\n        return Math.floor((((25 * (move.power !== null ? move.power : 30) * (attackPower / defensePower)) / 50) + 2) * randomDamage * typeDamage)\r\n    }, [])\r\n\r\n    const moveExecution = useCallback(async (executor, target, move) => {\r\n        move.currentPP--\r\n        if (executor.stats.statusEffect.includes('asleep')) {\r\n            setMessage(`${executor.name} is asleep`)\r\n            return null\r\n        }\r\n        if (executor.stats.statusEffect.includes('paralysed')) {\r\n            if (Math.random() * 100 <= 25) {\r\n                setMessage(`${executor.name} is paralysed`)\r\n                return null\r\n            }\r\n        }\r\n        if (move.accuracy !== null && Math.random() * 100 > move.accuracy) setMessage(`${executor.name} used ${move.name} and missed`)\r\n        if (move['damage class'].name === 'status') {\r\n            // eslint-disable-next-line default-case\r\n            switch (move.name) {\r\n                case 'tail-whip':\r\n                    target.stats.defense.base_stat -= 10\r\n                    setMessage(`${executor.name} used ${move.name} and lowered ${target.name}s defense`)\r\n                    break\r\n                case 'roost':\r\n                    executor.stats.currentHealth.base_stat + (executor.stats.health.base_stat / 2) > executor.stats.currentHealth.base_stat ? executor.stats.currentHealth.base_stat = executor.stats.health.base_stat : executor.stats.currentHealth.base_stat += Math.floor(executor.stats.health.base_stat / 2)\r\n                    setMessage(`${executor.name} used ${move.name} and restored som health`)\r\n                    break\r\n                case 'poison-powder':\r\n                    if (target.types.includes('steel') || target.types.includes('poison')) {\r\n                        setMessage(`${executor.name} used ${move.name} but it was not effective`)\r\n                    }\r\n                    if (target.stats.statusEffect.includes('poisoned')) setMessage(`${executor.name} used ${move.name} but ${target.name} was already poisoned`)\r\n                    target.stats.statusEffect.push('poisoned')\r\n                    setMessage(`${executor.name} used ${move.name} and poisoned ${target.name}`)\r\n                    break\r\n                case 'confuse-ray':\r\n                    if (target.stats.statusEffect.includes('confused')) setMessage(`${executor.name} used ${move.name} but ${target.name} was already confused`)\r\n                    target.stats.statusEffect.push('confused')\r\n                    setMessage(`${executor.name} used ${move.name} and confused ${target.name}`)\r\n                    break\r\n                case 'sing':\r\n                    if (target.stats.statusEffect.includes('asleep')) setMessage(`${executor.name} used ${move.name} but ${target.name} was already asleep`)\r\n                    target.stats.statusEffect.push('asleep')\r\n                    setMessage(`${executor.name} used ${move.name} and put ${target.name} asleep`)\r\n                    break\r\n            }\r\n        } else if (move['damage class'].name === 'physical') {\r\n            const damage = await attackDamage(move, executor, target)\r\n            console.log('executor :', executor)\r\n            console.log('target :', target)\r\n            console.log('damage :', damage)\r\n            // eslint-disable-next-line default-case\r\n            switch (move.name) {\r\n                case 'scratch':\r\n                case 'cut':\r\n                case 'bullet-punch':\r\n                case 'ice-shard':\r\n                    if (executor.stats.statusEffect.includes('confused')) {\r\n                        if (Math.random() * 100 <= 50) {\r\n                            executor.stats.currentHealth.base_stat -= damage / 2\r\n                            setMessage(`${executor.name} used ${move.name} and hurt itself in confusion`)\r\n                        }\r\n                    } else {\r\n                        target.stats.currentHealth.base_stat -= damage\r\n                        setMessage(`${executor.name} used ${move.name}`)\r\n                    }\r\n                    break\r\n                case 'head-smash':\r\n                    if (executor.stats.statusEffect.includes('confused')) {\r\n                        if (Math.random() * 100 <= 50) {\r\n                            executor.stats.currentHealth.base_stat -= damage / 2\r\n                            setMessage(`${executor.name} used ${move.name} but got hurt in confusion`)\r\n                        }\r\n                    } else {\r\n                        target.stats.currentHealth.base_stat -= damage\r\n                        executor.stats.currentHealth.base_stat -= damage / 2\r\n                        setMessage(`${executor.name} used ${move.name} but got hurt by the recoil`)\r\n                    }\r\n                    break\r\n                case 'twineedle':\r\n                    if (executor.stats.statusEffect.includes('confused')) {\r\n                        if (Math.random() * 100 <= 50) {\r\n                            executor.stats.currentHealth.base_stat -= damage / 2\r\n                            setMessage(`${executor.name} used ${move.name} but hurt itself in confusion`)\r\n                        }\r\n                    } else {\r\n                        target.stats.currentHealth.base_stat -= damage\r\n                        target.stats.currentHealth.base_stat -= await attackDamage(move, executor, target)\r\n                        setMessage(`${executor.name} used ${move.name}`)\r\n                        if (Math.random() * 100 > move.effect['effect chance']) {\r\n                            if (!target.stats.statusEffect.includes('poisoned')) {\r\n                                target.stats.statusEffect.push('poisoned')\r\n                                setMessage(`${executor.name} used ${move.name} and poisoned ${target.name}`)\r\n                            }\r\n                        }\r\n                    }\r\n                    break\r\n                case 'spark':\r\n                    if (executor.stats.statusEffect.includes('confused')) {\r\n                        if (Math.random() * 100 <= 50) {\r\n                            executor.stats.currentHealth.base_stat -= damage / 2\r\n                            setMessage(`${executor.name} used ${move.name} but hurt itself in confusion`)\r\n                        }\r\n                    } else {\r\n                        target.stats.currentHealth.base_stat -= damage\r\n                        setMessage(`${executor.name} used ${move.name}`)\r\n                        if (Math.random() * 100 > move.effect['effect chance']) {\r\n                            if (!target.stats.statusEffect.includes('paralysed')) {\r\n                                target.stats.statusEffect.push('paralysed')\r\n                                setMessage(`${executor.name} used ${move.name} and paralysed ${target.name}`)\r\n                            }\r\n                        }\r\n                    }\r\n                    break\r\n                case 'bite':\r\n                    if (executor.stats.statusEffect.includes('confused')) {\r\n                        if (Math.random() * 100 <= 50) {\r\n                            executor.stats.currentHealth.base_stat -= damage / 2\r\n                            setMessage(`${executor.name} used ${move.name} but hurt itself in confusion`)\r\n                        }\r\n                    } else {\r\n                        target.stats.currentHealth.base_stat -= damage\r\n                        setMessage(`${executor.name} used ${move.name}`)\r\n                    }\r\n                    break\r\n            }\r\n        } else {\r\n            const damage = await attackDamage(move, executor, target)\r\n            // eslint-disable-next-line default-case\r\n            switch (move.name) {\r\n                case 'focus-blast':\r\n                case 'moonblast':\r\n                    if (executor.stats.statusEffect.includes('confused')) {\r\n                        if (Math.random() * 100 <= 50) {\r\n                            executor.stats.currentHealth.base_stat -= damage / 2\r\n                            setMessage(`${executor.name} used ${move.name} but hurt itself in confusion`)\r\n                        }\r\n                    } else {\r\n                        target.stats.currentHealth.base_stat -= damage\r\n                        setMessage(`${executor.name} used ${move.name}`)\r\n                        if (Math.random() * 100 > move.effect['effect chance']) {\r\n                            target.stats['special defense'] -= 10\r\n                            setMessage(`${executor.name} used ${move.name} and lowered ${target.name}s special defense`)\r\n                        }\r\n                    }\r\n                    break\r\n                case 'mud-shot':\r\n                    if (executor.stats.statusEffect.includes('confused')) {\r\n                        if (Math.random() * 100 <= 50) {\r\n                            executor.stats.currentHealth.base_stat -= damage / 2\r\n                            setMessage(`${executor.name} used ${move.name} but hurt itself in confusion`)\r\n                        }\r\n                    } else {\r\n                        target.stats.currentHealth.base_stat -= damage\r\n                        target.stats.speed.base_stat -= 10\r\n                        setMessage(`${executor.name} used ${move.name} and lowered ${target.name}s speed`)\r\n                    }\r\n                    break\r\n                case 'ember':\r\n                    if (executor.stats.statusEffect.includes('confused')) {\r\n                        if (Math.random() * 100 <= 50) {\r\n                            executor.stats.currentHealth.base_stat -= damage / 2\r\n                            setMessage(`${executor.name} used ${move.name} but hurt itself in confusion`)\r\n                        }\r\n                    } else {\r\n                        target.stats.currentHealth.base_stat -= damage\r\n                        setMessage(`${executor.name} used ${move.name}`)\r\n                        if (Math.random() * 100 > move.effect['effect chance']) {\r\n                            if (!target.stats.statusEffect.includes('burned')) {\r\n                                target.stats.statusEffect.push('burned')\r\n                                setMessage(`${executor.name} used ${move.name} and set ${target.name} aflame`)\r\n                            }\r\n                        }\r\n                    }\r\n                    break\r\n                case 'water-pulse':\r\n                case 'confusion':\r\n                    if (executor.stats.statusEffect.includes('confused')) {\r\n                        if (Math.random() * 100 <= 50) {\r\n                            executor.stats.currentHealth.base_stat -= damage / 2\r\n                            setMessage(`${executor.name} used ${move.name} but hurt itself in confusion`)\r\n                        }\r\n                    } else {\r\n                        target.stats.currentHealth.base_stat -= damage\r\n                        setMessage(`${executor.name} used ${move.name}`)\r\n                        if (Math.random() * 100 > move.effect['effect chance']) {\r\n                            if (!target.stats.statusEffect.includes('confused')) {\r\n                                target.stats.statusEffect.push('confused')\r\n                                setMessage(`${executor.name} used ${move.name} and confused ${target.name}`)\r\n                            }\r\n                        }\r\n                    }\r\n                    break\r\n                case 'absorb':\r\n                    if (executor.stats.statusEffect.includes('confused')) {\r\n                        if (Math.random() * 100 <= 50) {\r\n                            executor.stats.currentHealth.base_stat -= damage / 2\r\n                            setMessage(`${executor.name} used ${move.name} but hurt itself in confusion`)\r\n                        }\r\n                    } else {\r\n                        target.stats.currentHealth.base_stat -= damage\r\n                        executor.stats.currentHealth.base_stat + (damage / 2) > executor.stats.health.base_stat ? executor.stats.currentHealth.base_stat = executor.stats.health.base_stat : executor.stats.currentHealth.base_stat += damage / 2\r\n                        setMessage(`${executor.name} used ${move.name} and healed itself`)\r\n                    }\r\n                    break\r\n                case 'dragon-breath':\r\n                    if (executor.stats.statusEffect.includes('confused')) {\r\n                        if (Math.random() * 100 <= 50) {\r\n                            executor.stats.currentHealth.base_stat -= damage / 2\r\n                            setMessage(`${executor.name} used ${move.name} but hurt itself in confusion`)\r\n                        }\r\n                    } else {\r\n                        target.stats.currentHealth.base_stat -= damage\r\n                        setMessage(`${executor.name} used ${move.name}`)\r\n                        if (Math.random() * 100 > move.effect['effect chance']) {\r\n                            if (!target.stats.statusEffect.includes('paralysed')) {\r\n                                target.stats.statusEffect.push('paralysed')\r\n                                setMessage(`${executor.name} used ${move.name} and paralysed ${target.name}`)\r\n                            }\r\n                        }\r\n                    }\r\n                    break\r\n            }\r\n        }\r\n        if (executor.stats.currentHealth.base_stat <= 0) executor.stats.currentHealth.base_stat = 0\r\n        if (target.stats.currentHealth.base_stat <= 0) target.stats.currentHealth.base_stat = 0\r\n    }, [attackDamage])\r\n\r\n    const checkFainted = (pokemon) => {\r\n        if (pokemon.stats.currentHealth.base_stat <= 0) {\r\n            pokemon.stats.currentHealth.base_stat = 0\r\n            if (!pokemon.stats.statusEffect.includes('fainted')){\r\n                pokemon.stats.statusEffect.push('fainted')\r\n            }\r\n            setMessage(`${pokemon.name} fainted`)\r\n        }\r\n    }\r\n\r\n    const checkStatusEffect = useCallback((pokemon) => {\r\n        if (isNotEmpty(pokemon.stats.statusEffect)){\r\n            pokemon.stats.statusEffect.forEach(status=>{\r\n                if (status === 'burned' || status === 'poisoned') {\r\n                    pokemon.stats.currentHealth.base_stat -= Math.floor(pokemon.stats.health.base_stat / 16)\r\n                    setMessage(`${pokemon.name} is ${status}`)\r\n                    if (Math.random() * 100 <= 25) {\r\n                        pokemon.stats.statusEffect = pokemon.stats.statusEffect.filter(effect=>status!==effect)\r\n                    }\r\n                    checkFainted(pokemon)\r\n                }\r\n            })\r\n        }\r\n    },[])\r\n\r\n    const endBattle = useCallback((friendPokemon, enemyPokemon) => {\r\n        const indexFriend = pokemonTeam.findIndex(pokemon=>{\r\n            console.log('pokemon in end :', pokemon, friendPokemon)\r\n            return pokemon.id===friendPokemon.id})\r\n        const tempFriendTeam = pokemonTeam\r\n        tempFriendTeam[indexFriend] = friendPokemon\r\n        updateTeam(tempFriendTeam)\r\n\r\n        const tempEnemyTeam = enemyPokemonTeam\r\n        const indexEnemy = tempEnemyTeam.findIndex(pokemon=>pokemon.id===enemyPokemon.id)\r\n        tempEnemyTeam[indexEnemy] = enemyPokemon\r\n        updateEnemyTeam(tempEnemyTeam)\r\n        setMessage(`What will ${friendPokemon.name} do?`)\r\n\r\n        setFighting(false)\r\n        console.log('enemy pokemon at the end of battle:', enemyPokemon)\r\n        if (enemyPokemon.stats.statusEffect.includes('fainted')){\r\n            console.log('fainted stuff')\r\n            const notFainted = tempEnemyTeam.filter(pokemon=>!pokemon.stats.statusEffect.includes('fainted'))\r\n            if (notFainted.length > 0) {\r\n                console.log('switching enemy', notFainted)\r\n                const newEnemy = notFainted[Math.round(Math.random() * (notFainted.length-1))]\r\n                console.log('new enemy', newEnemy)\r\n                setActiveEnemyPokemon(newEnemy)\r\n            } else {\r\n                setMessage('enemy team has been defeated')\r\n                setFighting(true)\r\n            }\r\n        }\r\n    }, [enemyPokemonTeam, pokemonTeam, setActiveEnemyPokemon, updateEnemyTeam, updateTeam])\r\n\r\n    const battle = useCallback( (friendMove) => {\r\n        setMessage('calculating results')\r\n        setFighting(true)\r\n        const enemyMove = activeEnemyPokemon.moves[Math.round(Math.random()*3)]\r\n        const friendPokemon = activePokemon\r\n        const enemyPokemon = activeEnemyPokemon\r\n        console.log('friend move :', friendMove)\r\n        console.log('enemy move :', enemyMove)\r\n        if (!isNotEmpty(friendMove)) return null\r\n        const firsAttack = firstAttack(friendMove, enemyMove)\r\n        console.log('firstAttack :', firsAttack)\r\n\r\n        if (firsAttack === 'friend') {\r\n            moveExecution(friendPokemon, enemyPokemon, friendMove)\r\n                .then(()=>{\r\n                    setTimeout(function () {\r\n                        checkFainted(friendPokemon)\r\n                        checkFainted(enemyPokemon)\r\n                        moveExecution(enemyPokemon, friendPokemon, enemyMove)\r\n                            .then(()=>{\r\n                                checkStatusEffect(friendPokemon)\r\n                                checkStatusEffect(enemyPokemon)\r\n                                setTimeout(function () {endBattle(friendPokemon, enemyPokemon)}, 500)\r\n                            })\r\n                    }, 1000)\r\n                })\r\n        } else {\r\n            moveExecution(enemyPokemon, friendPokemon, enemyMove)\r\n                .then(()=>{\r\n                    checkFainted(friendPokemon)\r\n                    checkFainted(enemyPokemon)\r\n                    setTimeout(function () {\r\n                        moveExecution(friendPokemon, enemyPokemon, friendMove)\r\n                            .then(()=>{\r\n                                checkStatusEffect(friendPokemon)\r\n                                checkStatusEffect(enemyPokemon)\r\n                                setTimeout(function () {endBattle(friendPokemon, enemyPokemon)}, 500)\r\n                            })\r\n                    }, 1000)\r\n                })\r\n        }\r\n    }, [activeEnemyPokemon, activePokemon, checkStatusEffect, endBattle, firstAttack, moveExecution])\r\n\r\n    function capitalize(word) {\r\n        const lower = word.toLowerCase();\r\n        return word.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n\r\n\r\n\r\n    const api = useMemo(()=>({\r\n        battle,\r\n        pokeMenu,\r\n        setPokeMenu,\r\n        message,\r\n        setMessage,\r\n        fighting\r\n    }), [battle, fighting, message, pokeMenu])\r\n\r\n    return <BattleContext.Provider value={api}>\r\n        {props.children}\r\n    </BattleContext.Provider>\r\n}\r\n\r\nexport const useBattleContext = () => useContext(BattleContext)","import {\r\n    Badge, Button,\r\n    Card,\r\n    Col, Collapse,\r\n    Container, ListGroup, ListGroupItem, Modal,\r\n    OverlayTrigger,\r\n    ProgressBar,\r\n    Row,\r\n    Tooltip\r\n} from \"react-bootstrap\";\r\nimport {usePokemonTeamContext} from \"../contexts/PokemonTeamContext\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {GetGender} from \"./generalComponents/Cards\";\r\nimport {MDBIcon} from \"mdbreact\";\r\nimport {useEnemyPokemonTeamContext} from \"../contexts/EnemyPokemonTeam\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {useBagContext} from \"../contexts/bagContext\";\r\nimport {useBattleContext} from \"../contexts/BattleContext\";\r\n\r\nexport function BattleSection() {\r\n    const {pokemonTeam, activePokemon} = usePokemonTeamContext()\r\n    const {activeEnemyPokemon} = useEnemyPokemonTeamContext()\r\n    const {pokeMenu} = useBattleContext()\r\n\r\n    return <section>\r\n        <Container id={'battle'} className={'p-0 mt-5'}>\r\n            {pokeMenu === 'pokemon' ? <PokemonChangeMenu pokemonTeam={pokemonTeam}/> :\r\n                pokeMenu === 'bag' ? <BagScreen/> :\r\n                    <>\r\n                        <div className={'d-flex battle-screen'}>\r\n                            <Col lg={6} className={'left-field'}>\r\n                                <Row className={'mt-3'}>\r\n                                    <NameSection pokemon={activeEnemyPokemon}/>\r\n                                    <div className={'position-relative w-75 mx-auto card-arrow'}/>\r\n                                </Row>\r\n                                <Row>\r\n                                    <img className={'w-75 mt-5 poke-image mirror'} src={activePokemon.image} alt=\"\"/>\r\n                                </Row>\r\n                                <Row style={{height: '0'}}>\r\n                                    <img\r\n                                        src=\"https://firebasestorage.googleapis.com/v0/b/pokemon-battle-f40d2.appspot.com/o/battle_podia.png?alt=media&token=21348cd1-ea50-4ea2-ab4c-c9d4ba6d6042\"\r\n                                        alt=\"\"\r\n                                        className={'w-75 position-relative poke-stadia'}\r\n                                    />\r\n                                </Row>\r\n                            </Col>\r\n                            <Col lg={6} className={'right-field'}>\r\n                                <Row>\r\n                                    <img className={'w-75 mt-5 ms-auto poke-image'}\r\n                                         src={activeEnemyPokemon.image}\r\n                                         alt=\"\"/>\r\n                                </Row>\r\n                                <Row style={{height: '25px'}}>\r\n                                    <img\r\n                                        src=\"https://firebasestorage.googleapis.com/v0/b/pokemon-battle-f40d2.appspot.com/o/battle_podia.png?alt=media&token=21348cd1-ea50-4ea2-ab4c-c9d4ba6d6042\"\r\n                                        alt=\"\"\r\n                                        className={'w-75 position-relative ms-auto poke-stadia'}\r\n                                    />\r\n                                </Row>\r\n                                <Row>\r\n                                    <NameSection pokemon={activePokemon} className={'ms-auto'} friend={true}/>\r\n                                    <div className={'position-relative w-75 mx-auto card-arrow mirror'}/>\r\n                                </Row>\r\n                            </Col>\r\n                        </div>\r\n                        {pokeMenu === 'start' && <PokeOptions/>}\r\n                        {pokeMenu === 'battle' &&\r\n                        <PokeBattleButton moves={activePokemon.moves}/>}\r\n                    </>\r\n            }\r\n        </Container>\r\n    </section>\r\n}\r\n\r\nexport function isNotEmpty(object) { for(const i in object) { return true; } return false; }\r\n\r\nfunction BagScreen() {\r\n    const {bag} = useBagContext()\r\n    const [target, setTarget] = useState({})\r\n    const [targetItem, setTargetItem] = useState({})\r\n    const [targetMove, setTargetMove] = useState({})\r\n    const [modalShow, setModalShow] = useState(false)\r\n    const {pokemonTeam, updateTeam} = usePokemonTeamContext()\r\n    const {setPokeMenu} = useBattleContext()\r\n\r\n    useEffect(()=>{\r\n        if (isNotEmpty(target) && isNotEmpty(targetItem)){\r\n            console.log(target)\r\n            console.log(targetItem)\r\n            // eslint-disable-next-line default-case\r\n            switch (targetItem.name) {\r\n                case 'ether':\r\n                    pokemonTeam.find(pokemon=>pokemon.id===target.id).moves.find(move=>move.name===targetMove.name).currentPP = targetMove.currentPP + 10 > targetMove.pp ? targetMove.currentPP = targetMove.pp : targetMove.currentPP += targetMove.pp\r\n                    bag.find(item=>item.name==='ether').amount--\r\n                    setTarget({})\r\n                    setTargetItem({})\r\n                    setTargetMove({})\r\n                    updateTeam(pokemonTeam)\r\n                    break\r\n                case 'fresh water':\r\n                    pokemonTeam.find(pokemon=>pokemon.id===target.id).stats.currentHealth.base_stat = target.stats.currentHealth.base_stat + 30 > target.stats.health.base_stat ? target.stats.currentHealth.base_stat = target.stats.health.base_stat : target.stats.currentHealth.base_stat += 30\r\n                    bag.find(item=>item.name==='fresh water').amount--\r\n                    setTarget({})\r\n                    setTargetItem({})\r\n                    setTargetMove({})\r\n                    updateTeam(pokemonTeam)\r\n                    break\r\n                case 'full heal':\r\n                    pokemonTeam.find(pokemon=>pokemon.id===target.id).stats.statusEffect = target.stats.statusEffect.includes('fainted') ? ['fainted'] : []\r\n                    bag.find(item=>item.name==='full heal').amount--\r\n                    setTarget({})\r\n                    setTargetItem({})\r\n                    setTargetMove({})\r\n                    updateTeam(pokemonTeam)\r\n                    break\r\n                case 'full restore':\r\n                    pokemonTeam.find(pokemon=>pokemon.id===target.id).stats.statusEffect = target.stats.statusEffect.includes('fainted') ? ['fainted'] : []\r\n                    pokemonTeam.find(pokemon=>pokemon.id===target.id).stats.currentHealth.base_stat = target.stats.health.base_stat\r\n                    bag.find(item=>item.name==='full restore').amount--\r\n                    setTarget({})\r\n                    setTargetItem({})\r\n                    setTargetMove({})\r\n                    updateTeam(pokemonTeam)\r\n                    break\r\n                case 'revive':\r\n                    pokemonTeam.find(pokemon=>pokemon.id===target.id).stats.statusEffect = pokemonTeam.find(pokemon=>pokemon.id===target.id).stats.statusEffect.filter(status=>status!=='fainted')\r\n                    pokemonTeam.find(pokemon=>pokemon.id===target.id).stats.currentHealth.base_stat = Math.round(target.stats.health.base_stat / 2)\r\n                    bag.find(item=>item.name==='revive').amount--\r\n                    setTarget({})\r\n                    setTargetItem({})\r\n                    setTargetMove({})\r\n                    updateTeam(pokemonTeam)\r\n                    break\r\n            }\r\n        }\r\n    }, [bag, pokemonTeam, target, targetItem, targetMove, updateTeam])\r\n\r\n    return <Container>\r\n        <PokeItemChooseModal show={modalShow}\r\n                             onHide={()=>setModalShow(false)}\r\n                             item={targetItem}\r\n                             setTarget={setTarget}\r\n                             setModalShow={setModalShow}\r\n                             setTargetMove={setTargetMove}\r\n                             targetMove={targetMove}/>\r\n        <Row lg={2} className={'g-4'}>\r\n            {bag.map((item, i) => {\r\n                return <BagCard item={item} key={i} setModalShow={setModalShow} setTargetItem={setTargetItem}/>\r\n            })}\r\n        </Row>\r\n        <button onClick={() => setPokeMenu('start')} className={'poke-option-button w-100 btn bg-light'}>Back</button>\r\n    </Container>\r\n}\r\n\r\nfunction BagCard(props) {\r\n    const {item, setModalShow, setTargetItem} = props\r\n    const [open, setOpen] = useState(false)\r\n\r\n\r\n    function consumeItem(item) {\r\n        setTargetItem(item)\r\n        setModalShow(true)\r\n    }\r\n\r\n    return <>\r\n        {item.amount < 1 ? null :\r\n            <Col aria-controls={item.name} aria-expanded={open} onClick={() => setOpen(!open)}>\r\n                <Card className={'p-3'}>\r\n                    <Row>\r\n                        <Col lg={10}><h4 className={'text-capitalize'}>{item.name}</h4></Col>\r\n                        <Col lg={2}><Badge pill className={'p-2'}>{item.amount}</Badge></Col>\r\n                    </Row>\r\n                    <Collapse in={open}>\r\n                        <div id={item.name}>\r\n                            <p>{item.description}</p>\r\n                            <div className={'w-50 mx-auto'}>\r\n                                <Button className={'text-center w-100 rounded-pill'}\r\n                                        onClick={() => consumeItem(item)}>use</Button>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n                </Card>\r\n            </Col>\r\n        }\r\n    </>\r\n}\r\n\r\nfunction PokeItemChooseModal(props) {\r\n    const {pokemonTeam} = usePokemonTeamContext()\r\n    const {setModalShow, setTarget, setTargetMove, targetMove, item} = props\r\n\r\n    function selectTarget() {\r\n        if ((item.name === 'ether' && isNotEmpty(targetMove)) || item.name !== 'ether'){\r\n            setModalShow(false)\r\n            console.log('move / target selected')\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            pokemonTeam={pokemonTeam}\r\n            setTarget={setTarget}\r\n            setModalShow={setModalShow}\r\n            setTargetMove={setTargetMove}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Choose what pokemon you'd want to apply the item to.\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <div className={'mx-3'}>\r\n                <h4 className={'text-capitalize'}>{props.item.name}</h4>\r\n                <p>{props.item.description}</p>\r\n                <Row lg={2} className={'g-4'}>\r\n                    {pokemonTeam.map((p, i)=>{ return <Col>\r\n                        <Card key={i}>\r\n                            <Card.Header><span className={'text-capitalize'}>{p.name}</span></Card.Header>\r\n                            <Row>\r\n                                <Col lg={4}>\r\n                                    <img src={p.image} className={'w-100'} alt=\"\"/>\r\n                                </Col>\r\n                                <Col className={' me-3'}>\r\n                                    <div className={'d-flex my-3'}>\r\n                                        {p.stats.statusEffect.map((effect, i) => {\r\n                                            return <PokeStatus key={i} status={effect}/>\r\n                                        })}\r\n                                    </div>\r\n                                    <div>\r\n                                        <div className={'w-100 my-auto d-flex rounded text-light ps-2 bg-green'}>\r\n                                            <span className={'text-yellow'}>HP</span>\r\n                                            <div className={'w-100 my-auto mx-2'}>\r\n                                                <ProgressBar now={p.stats.currentHealth.base_stat} min={0}\r\n                                                             max={p.stats.health.base_stat} variant={'success'}/>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className={'text-right me-3'}>\r\n                                            {`${p.stats.currentHealth.base_stat} / ${p.stats.health.base_stat}`}\r\n                                        </div>\r\n                                    </div>\r\n                                </Col>\r\n                                {props.item.name === 'ether' ? <Container className={'mx-auto my-3 w-75'}>\r\n                                    <ListGroup>\r\n                                        {p.moves.map((move, i)=>{\r\n                                            return <ListGroupItem key={i} className={'d-flex justify-content-between'} onClick={()=>{setTargetMove(move); setTarget(p)}} active={move.name === targetMove.name}>\r\n                                                <div className={'font-weight-bold text-capitalize'}>{move.name}</div>\r\n                                                <div className={'text-muted'}>{`${move.currentPP}/${move.pp}`}</div>\r\n                                            </ListGroupItem>\r\n                                        })}\r\n                                    </ListGroup>\r\n                                </Container>\r\n                                : <Button className={'w-50 mx-auto rounded-pill'} onClick={()=>{selectTarget(); setTarget(p)}}>Select Pokemon</Button>\r\n                                }\r\n                            </Row>\r\n                        </Card>\r\n                    </Col>\r\n                    })}\r\n                </Row>\r\n            </div>\r\n            <Modal.Footer>\r\n                {item.name === 'ether' && <Button className={'w-50 mx-auto rounded-pill'} onClick={()=>selectTarget()} variant={\"success\"}>Select Move</Button>}\r\n                <Button onClick={props.onHide}>Back</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nfunction PokemonChangeMenu(props) {\r\n    const {pokemonTeam} = props\r\n    const {setPokeMenu} = useBattleContext()\r\n    const {activePokemon} = usePokemonTeamContext()\r\n    return <Container>\r\n        <Row lg={2} className={'g-4'}>\r\n            {pokemonTeam.map((pokemon, i) => <PokeChangeFrames key={i}\r\n                                                               activePokemon={activePokemon.name === pokemon.name}\r\n                                                               pokemon={pokemon}/>)}\r\n        </Row>\r\n        <div className={'mt-3'}>\r\n            <button onClick={() => setPokeMenu('start')} className={'poke-option-button w-100 btn bg-light'}>Back\r\n            </button>\r\n        </div>\r\n    </Container>\r\n}\r\n\r\nfunction PokeChangeFrames(props) {\r\n    const {setActivePokemon} = usePokemonTeamContext()\r\n    const {setPokeMenu} = useBattleContext()\r\n    const {pokemon, activePokemon} = props\r\n    const gender = GetGender(pokemon.gender)\r\n    console.log(pokemon)\r\n    const changePokemon = (pokemon) => {\r\n        if (!pokemon.stats.statusEffect.includes('fainted')) {\r\n            localStorage.setItem('activePokemon', JSON.stringify(pokemon))\r\n            setActivePokemon(pokemon)\r\n            setPokeMenu('start')\r\n        }\r\n    }\r\n    return <Col>\r\n        <Card\r\n            className={activePokemon ? 'border-3 border-primary bg-yellow' : pokemon.stats.statusEffect.includes('fainted') ? 'fainted' : ''}\r\n            onClick={() => changePokemon(pokemon)}>\r\n            <Row className={'mt-2'}>\r\n                <Col lg={4}>\r\n                    <img src={pokemon.image} alt=\"\" style={{height: '10rem'}}/>\r\n                </Col>\r\n                <Col lg={8}>\r\n                    <div className={'text-capitalize h3'}><span className={'text-capitalize h4'}>{pokemon.name} <span\r\n                        className={'ms-2 text-primary'}><MDBIcon icon={gender}/></span></span></div>\r\n                    <div>{pokemon.types.map((type, i) => {\r\n                        return <span key={i} className={'text-capitalize'}>{`${type.type.name} `}</span>\r\n                    })}</div>\r\n                    <Row lg={2} style={{height: '70px'}} className={'me-2'}>\r\n                        <Col className={'d-flex'}>\r\n                            <div className={'align-self-end'}>\r\n                                {pokemon.stats.statusEffect.map((effect, i) => {\r\n                                    return <PokeStatus key={i} status={effect}/>\r\n                                })}\r\n                            </div>\r\n                        </Col>\r\n                        <Col>\r\n                            <div className={'w-100 my-auto d-flex rounded text-light ps-2 bg-green'}>\r\n                                <span className={'text-yellow'}>HP</span>\r\n                                <div className={'w-100 my-auto mx-2'}>\r\n                                    <ProgressBar now={pokemon.stats.currentHealth.base_stat} min={0}\r\n                                                 max={pokemon.stats.health.base_stat} variant={'success'}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className={'text-right me-3'}>\r\n                                {`${pokemon.stats.currentHealth.base_stat} / ${pokemon.stats.health.base_stat}`}\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </Card>\r\n    </Col>\r\n}\r\n\r\nconst getEffectColour = (effect) => {\r\n    switch (effect) {\r\n        case 'fainted':\r\n            return 'danger'\r\n        case 'burned':\r\n            return 'warning'\r\n        case 'confused':\r\n        case 'paralysed':\r\n            return 'secondary'\r\n        case 'poisoned':\r\n            return 'primary'\r\n        case 'asleep':\r\n        default:\r\n            return 'info'\r\n    }\r\n}\r\n\r\nfunction PokeStatus(props) {\r\n    const {status} = props\r\n    const effect = getEffectColour(status)\r\n    return <Badge className={'p-2'} pill bg={effect}>{status}</Badge>\r\n}\r\n\r\nfunction PokeOptions() {\r\n    return <RoundedDiv color={'bg-green'}>\r\n        <div className={'p-2 battle-option-screen m-0 d-flex'}>\r\n            <PokeMessage/>\r\n            <Col lg={6} className={'m-0 bg-beige row rounded-3'}>\r\n                <PokeStartButton buttons={['fight', 'pokemon', 'bag', 'flee']}/>\r\n            </Col>\r\n        </div>\r\n    </RoundedDiv>\r\n}\r\n\r\nfunction RoundedDiv(props) {\r\n    const {color, children} = props\r\n    return <div className={`rounded-3 p-1 ${color}`}>\r\n        {children}\r\n    </div>\r\n}\r\n\r\nfunction PokeMessage() {\r\n    const {message} = useBattleContext()\r\n    return <Col lg={6} className={'m-0'}>\r\n        <RoundedDiv color={'bg-green'}>\r\n            <RoundedDiv color={'bg-yellow'}>\r\n                <RoundedDiv color={'bg-green'}>\r\n                    <div className={'bg-beige battle-option-text p-2'}>\r\n                        {message}\r\n                    </div>\r\n                </RoundedDiv>\r\n            </RoundedDiv>\r\n        </RoundedDiv>\r\n    </Col>\r\n}\r\n\r\nfunction PokeBattleButton(props) {\r\n    const {moves} = props\r\n    const {setPokeMenu} = useBattleContext()\r\n    console.log(moves)\r\n\r\n    return <RoundedDiv color={'bg-green'}>\r\n        <Container>\r\n            <Row col={2}>\r\n                {moves.map((move, i) => <PokeMoveButton key={i} move={move}/>)}\r\n            </Row>\r\n            <div>\r\n                <button onClick={() => setPokeMenu('start')} className={'poke-option-button w-100 btn bg-light'}>Back\r\n                </button>\r\n            </div>\r\n        </Container>\r\n    </RoundedDiv>\r\n}\r\n\r\nfunction PokeMoveButton(props) {\r\n    const {move} = props\r\n    const {battle, setPokeMenu} = useBattleContext()\r\n\r\n    console.log(move)\r\n\r\n    const battleTime = () => {\r\n        battle(move)\r\n        setPokeMenu('start')\r\n    }\r\n\r\n    return <Col>\r\n        <OverlayTrigger overlay={\r\n            <Tooltip>\r\n                {move.description ? move.description.flavor_text : move.flavor_text}\r\n            </Tooltip>\r\n        } placement={'top'} defaultShow={false} delay={500}>\r\n            <button className={'poke-option-button w-100 btn bg-light'} onClick={()=>battleTime()}>\r\n                <div className={'font-weight-bold'}>{move.name}</div>\r\n                <div className={'text-muted'}>{`${move.currentPP}/${move.pp}`}</div>\r\n            </button>\r\n        </OverlayTrigger>\r\n    </Col>\r\n}\r\n\r\nfunction PokeStartButton(props) {\r\n    const {buttons} = props\r\n    const {setPokeMenu, setMessage, fighting} = useBattleContext()\r\n    const {activePokemon} = usePokemonTeamContext()\r\n\r\n    const history = useHistory()\r\n\r\n    const click = (button) => {\r\n        switch (button) {\r\n            case 'fight' :\r\n                if (!activePokemon.stats.statusEffect.includes('fainted')) {\r\n                    setPokeMenu('battle')\r\n                }\r\n                break\r\n            case 'pokemon':\r\n                setPokeMenu('pokemon')\r\n                break\r\n            case 'bag':\r\n                setPokeMenu('bag')\r\n                break\r\n            case 'flee':\r\n                setMessage('you have fled')\r\n                setTimeout(function () {\r\n                    history.push('/')\r\n                    setMessage(`What will ${activePokemon.name} do?`)\r\n                }, 1000)\r\n                break\r\n            default:\r\n                setPokeMenu('start')\r\n        }\r\n    }\r\n    return <>\r\n        {buttons.map((button, i) => {\r\n            return <Col lg={6} key={i}>\r\n                <button onClick={() => click(button)}\r\n                        className={`poke-option-button w-100 btn ${button}`} disabled={fighting}>{button}</button>\r\n            </Col>\r\n        })}\r\n    </>\r\n}\r\n\r\nfunction NameSection(props) {\r\n    const {pokemon, friend, className} = props\r\n    const gender = GetGender(pokemon.gender)\r\n    return <div>\r\n        <Card className={className + ' px-3 py-1 pokemon-card bg-beige'}>\r\n            <Card.Title><span className={'text-capitalize h4'}>{pokemon.name} <span\r\n                className={'ms-2 text-primary'}><MDBIcon icon={gender}/></span></span></Card.Title>\r\n            <div className={'d-flex justify-content-between'}>\r\n                <img\r\n                    src=\"https://firebasestorage.googleapis.com/v0/b/pokemon-battle-f40d2.appspot.com/o/Poke-Ball-32.png?alt=media&token=9513774d-f6e3-474b-988f-490c7f58ff08\"\r\n                    alt=\"\"/>\r\n                <div className={'w-75 my-auto d-flex rounded text-light ps-2 bg-green'}>\r\n                    <span className={'text-yellow'}>HP</span>\r\n                    <div className={'w-100 my-auto mx-2'}>\r\n                        <ProgressBar now={pokemon.stats.currentHealth.base_stat} min={0}\r\n                                     max={pokemon.stats.health.base_stat} variant={'success'}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Row lg={2} className={'mt-1'}>\r\n                <Col lg={6}>\r\n                    {pokemon.stats.statusEffect.map((effect, i) => {\r\n                        return <PokeStatus key={i} status={effect}/>\r\n                    })}\r\n                </Col>\r\n                <Col lg={6}>\r\n                    {friend && <div className={'text-right'}>\r\n                        {`${pokemon.stats.currentHealth.base_stat} / ${pokemon.stats.health.base_stat}`}\r\n                    </div>}\r\n                </Col>\r\n            </Row>\r\n        </Card>\r\n    </div>\r\n}","import './App.css';\r\nimport {Navigation} from \"./components/Navigation\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {PokemonSection} from \"./components/pokemon\";\r\nimport {PokemonTeamProvider} from \"./contexts/PokemonTeamContext\";\r\nimport {EnemyPokemonTeamProvider} from \"./contexts/EnemyPokemonTeam\";\r\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport {BattleSection} from \"./components/Battle\";\r\nimport {BagProvider} from \"./contexts/bagContext\";\r\nimport {BattleProvider} from \"./contexts/BattleContext\";\r\n\r\nfunction DefaultComp(props) {\r\n    return <div className=\"App\">\r\n        <Navigation/>\r\n        {props.children}\r\n    </div>;\r\n}\r\n\r\nfunction ProvidedApp() {\r\n    return <Switch>\r\n        <Route path={'/battle'}>\r\n            <DefaultComp>\r\n                <BattleSection/>\r\n            </DefaultComp>\r\n        </Route>\r\n        <Route path={'/'}>\r\n            <DefaultComp>\r\n                <PokemonSection/>\r\n            </DefaultComp>\r\n        </Route>\r\n        </Switch>\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n        <PokemonTeamProvider>\r\n            <EnemyPokemonTeamProvider>\r\n                <BagProvider>\r\n                    <BattleProvider>\r\n                        <ProvidedApp/>\r\n                    </BattleProvider>\r\n                </BagProvider>\r\n            </EnemyPokemonTeamProvider>\r\n        </PokemonTeamProvider>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}